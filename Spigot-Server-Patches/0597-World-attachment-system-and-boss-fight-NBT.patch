From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moderocky <admin@moderocky.com>
Date: Wed, 23 Sep 2020 10:43:58 +0100
Subject: [PATCH] World attachment system and boss fight NBT.


diff --git a/src/main/java/mx/kenzie/server/entity/craft/CraftCustomLivingEntity.java b/src/main/java/mx/kenzie/server/entity/craft/CraftCustomLivingEntity.java
new file mode 100644
index 0000000000000000000000000000000000000000..97daa30f4eabb0722ad8d91303c3e447f4133de5
--- /dev/null
+++ b/src/main/java/mx/kenzie/server/entity/craft/CraftCustomLivingEntity.java
@@ -0,0 +1,32 @@
+package mx.kenzie.server.entity.craft;
+
+import mx.kenzie.server.entity.custom.CustomLivingEntity;
+import mx.kenzie.wellspring.entity.CustomEntity;
+import mx.kenzie.wellspring.entity.CustomEntityType;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.entity.EntityType;
+import org.bukkit.plugin.Plugin;
+
+public class CraftCustomLivingEntity extends CraftLivingEntity implements CustomEntity {
+
+    public CraftCustomLivingEntity(CraftServer server, CustomLivingEntity entity) {
+        super(server, entity);
+    }
+
+    @Override
+    public CustomEntityType getCustomType() {
+        return ((CustomLivingEntity) entity).getImplementation().getCustomType();
+    }
+
+    @Override
+    public Plugin getProvidingPlugin() {
+        return ((CustomLivingEntity) entity).getImplementation().getProvidingPlugin();
+    }
+
+    @Override
+    public EntityType getType() {
+        return EntityType.UNKNOWN;
+    }
+
+}
diff --git a/src/main/java/mx/kenzie/server/entity/custom/CustomLivingEntity.java b/src/main/java/mx/kenzie/server/entity/custom/CustomLivingEntity.java
new file mode 100644
index 0000000000000000000000000000000000000000..e5a82c2dc25d58c45527def126dbf0f9b9b920de
--- /dev/null
+++ b/src/main/java/mx/kenzie/server/entity/custom/CustomLivingEntity.java
@@ -0,0 +1,81 @@
+package mx.kenzie.server.entity.custom;
+
+import com.google.common.collect.Lists;
+import net.minecraft.server.*;
+import org.bukkit.NamespacedKey;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.inventory.EquipmentSlot;
+
+import java.util.stream.Collectors;
+
+public class CustomLivingEntity extends EntityLiving {
+
+    protected final mx.kenzie.wellspring.entity.CustomLivingEntity implementation;
+
+    @SuppressWarnings("all")
+    public CustomLivingEntity(org.bukkit.World world, NamespacedKey type, mx.kenzie.wellspring.entity.CustomLivingEntity implementation) {
+        super((EntityTypes<? extends EntityLiving>) IRegistry.ENTITY_TYPE.get(new MinecraftKey(type.toString())), ((CraftWorld) world).getHandle());
+        this.implementation = implementation;
+    }
+
+    @Override
+    public EntityTypes<?> getVisualType() {
+        return IRegistry.ENTITY_TYPE.get(new MinecraftKey(implementation.getVisualType().getKey().toString()));
+    }
+
+    @Override
+    public Iterable<ItemStack> getArmorItems() {
+        return implementation.getArmorItems().stream().map(CraftItemStack::asNMSCopy).collect(Collectors.toList());
+    }
+
+    @Override
+    public ItemStack getEquipment(EnumItemSlot enumitemslot) {
+        switch (enumitemslot) {
+            case HEAD:
+                return CraftItemStack.asNMSCopy(implementation.getEquipment(EquipmentSlot.HEAD));
+            case CHEST:
+                return CraftItemStack.asNMSCopy(implementation.getEquipment(EquipmentSlot.CHEST));
+            case LEGS:
+                return CraftItemStack.asNMSCopy(implementation.getEquipment(EquipmentSlot.LEGS));
+            case FEET:
+                return CraftItemStack.asNMSCopy(implementation.getEquipment(EquipmentSlot.FEET));
+            case MAINHAND:
+                return CraftItemStack.asNMSCopy(implementation.getEquipment(EquipmentSlot.HAND));
+            case OFFHAND:
+                return CraftItemStack.asNMSCopy(implementation.getEquipment(EquipmentSlot.OFF_HAND));
+            default:
+                return null;
+        }
+    }
+
+    @Override
+    public void setSlot(EnumItemSlot enumitemslot, ItemStack itemstack) {
+        switch (enumitemslot) {
+            case HEAD:
+                implementation.setEquipment(EquipmentSlot.HEAD, CraftItemStack.asBukkitCopy(itemstack));
+            case CHEST:
+                implementation.setEquipment(EquipmentSlot.CHEST, CraftItemStack.asBukkitCopy(itemstack));
+            case LEGS:
+                implementation.setEquipment(EquipmentSlot.LEGS, CraftItemStack.asBukkitCopy(itemstack));
+            case FEET:
+                implementation.setEquipment(EquipmentSlot.FEET, CraftItemStack.asBukkitCopy(itemstack));
+            case MAINHAND:
+                implementation.setEquipment(EquipmentSlot.HAND, CraftItemStack.asBukkitCopy(itemstack));
+            case OFFHAND:
+                implementation.setEquipment(EquipmentSlot.OFF_HAND, CraftItemStack.asBukkitCopy(itemstack));
+        }
+    }
+
+    @Override
+    public EnumMainHand getMainHand() {
+        if (implementation.getMainHand() == mx.kenzie.wellspring.entity.CustomLivingEntity.Hand.RIGHT)
+            return EnumMainHand.RIGHT;
+        return EnumMainHand.LEFT;
+    }
+
+    public mx.kenzie.wellspring.entity.CustomLivingEntity getImplementation() {
+        return implementation;
+    }
+
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 299f57ca2a65887a0d7e7c584fc1bd5c783b0db2..6ad8abb7f88f8135ea28c3c5da1f2ebe62d9ee13 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -22,77 +22,10 @@ import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
 import java.util.function.Predicate;
 import java.util.stream.Collectors;
-import net.minecraft.server.ArraySetSorted;
-import net.minecraft.server.AxisAlignedBB;
-import net.minecraft.server.BiomeBase;
-import net.minecraft.server.BiomeDecoratorGroups;
-import net.minecraft.server.BlockChorusFlower;
-import net.minecraft.server.BlockDiodeAbstract;
-import net.minecraft.server.BlockPosition;
-import net.minecraft.server.Blocks;
-import net.minecraft.server.ChunkCoordIntPair;
-import net.minecraft.server.ChunkMapDistance;
-import net.minecraft.server.ChunkStatus;
-import net.minecraft.server.EntityAreaEffectCloud;
-import net.minecraft.server.EntityArmorStand;
-import net.minecraft.server.EntityArrow;
-import net.minecraft.server.EntityBoat;
-import net.minecraft.server.EntityEgg;
-import net.minecraft.server.EntityEnderSignal;
-import net.minecraft.server.EntityEvokerFangs;
-import net.minecraft.server.EntityExperienceOrb;
-import net.minecraft.server.EntityFallingBlock;
-import net.minecraft.server.EntityFireball;
-import net.minecraft.server.EntityFireworks;
-import net.minecraft.server.EntityHanging;
-import net.minecraft.server.EntityHuman;
-import net.minecraft.server.EntityInsentient;
-import net.minecraft.server.EntityItem;
-import net.minecraft.server.EntityItemFrame;
-import net.minecraft.server.EntityLeash;
-import net.minecraft.server.EntityLightning;
-import net.minecraft.server.EntityMinecartChest;
-import net.minecraft.server.EntityMinecartCommandBlock;
-import net.minecraft.server.EntityMinecartFurnace;
-import net.minecraft.server.EntityMinecartHopper;
-import net.minecraft.server.EntityMinecartMobSpawner;
-import net.minecraft.server.EntityMinecartRideable;
-import net.minecraft.server.EntityMinecartTNT;
-import net.minecraft.server.EntityPainting;
-import net.minecraft.server.EntityPotion;
-import net.minecraft.server.EntitySnowball;
-import net.minecraft.server.EntityTNTPrimed;
-import net.minecraft.server.EntityTippedArrow;
-import net.minecraft.server.EntityTypes;
-import net.minecraft.server.EntityZombie;
-import net.minecraft.server.EnumDifficulty;
-import net.minecraft.server.EnumDirection;
-import net.minecraft.server.EnumMobSpawn;
-import net.minecraft.server.Explosion;
-import net.minecraft.server.GameRules;
-import net.minecraft.server.GroupDataEntity;
-import net.minecraft.server.IBlockData;
-import net.minecraft.server.IChunkAccess;
-import net.minecraft.server.IRegistry;
-import net.minecraft.server.MCUtil;
-import net.minecraft.server.MinecraftKey;
-import net.minecraft.server.MinecraftServer;
-import net.minecraft.server.MovingObjectPosition;
-import net.minecraft.server.PacketPlayOutCustomSoundEffect;
-import net.minecraft.server.PacketPlayOutUpdateTime;
-import net.minecraft.server.PacketPlayOutWorldEvent;
-import net.minecraft.server.PersistentRaid;
-import net.minecraft.server.PlayerChunk;
-import net.minecraft.server.ProtoChunkExtension;
-import net.minecraft.server.RayTrace;
-import net.minecraft.server.SavedFile;
-import net.minecraft.server.SoundCategory;
-import net.minecraft.server.StructureGenerator;
-import net.minecraft.server.Ticket;
-import net.minecraft.server.TicketType;
-import net.minecraft.server.Unit;
-import net.minecraft.server.Vec3D;
-import net.minecraft.server.WorldServer;
+
+import mx.kenzie.server.attachment.AttachmentHolder;
+import mx.kenzie.wellspring.nbt.NBTCompound;
+import net.minecraft.server.*;
 import org.apache.commons.lang.Validate;
 import org.bukkit.BlockChangeDelegate;
 import org.bukkit.Bukkit;
@@ -110,6 +43,7 @@ import org.bukkit.StructureType;
 import org.bukkit.TreeType;
 import org.bukkit.World;
 import org.bukkit.WorldBorder;
+import org.bukkit.attachment.Attachment;
 import org.bukkit.block.Biome;
 import org.bukkit.block.Block;
 import org.bukkit.block.BlockFace;
@@ -284,6 +218,8 @@ public class CraftWorld implements World {
     private int waterAmbientSpawn = -1;
     private int ambientSpawn = -1;
 
+    public final AttachmentHolder attachments; // Kenzie
+
     // Paper start - Provide fast information methods
     public int getEntityCount() {
         int ret = 0;
@@ -341,6 +277,11 @@ public class CraftWorld implements World {
         this.generator = gen;
 
         environment = env;
+        // Kenzie start - attachments
+        this.attachments = new AttachmentHolder(this);
+        server.attachmentFactory.addAttachments(this, attachments);
+        server.attachmentFactory.registerAttachmentHolder(attachments);
+        // Kenzie end
     }
 
     @Override
@@ -2608,5 +2549,44 @@ public class CraftWorld implements World {
     {
         return spigot;
     }
+
+    // Kenzie start
+    @Override
+    @SuppressWarnings("unchecked")
+    public <T extends Attachment<?>> T getAttachment(Class<T> attachmentClass) {
+        T attachment = (T) attachments.getByClass(attachmentClass); // This cast is fine
+        if (attachment == null) {
+            throw new NullPointerException("No attachment for this class has been registered.");
+        }
+        return attachment;
+    }
+
+    @Override
+    public <T extends Attachment<?>> boolean hasAttachment(Class<T> attachmentClass) {
+        return attachments.containsByClass(attachmentClass);
+    }
+
+    @Override
+    public NBTCompound getDragonFightNBT() {
+        return getHandle().worldDataServer.C();
+    }
+
+    @Override
+    public void setDragonFightNBT(NBTCompound compound) {
+        getHandle().worldDataServer.a(((NBTTagCompound) compound));
+    }
+
+    @Override
+    public NBTCompound getCustomBossNBT() {
+        NBTTagCompound compound = getHandle().worldDataServer.getCustomBossEvents();
+        return compound != null ? compound : new NBTTagCompound();
+    }
+
+    @Override
+    public void setCustomBossNBT(NBTCompound compound) {
+        getHandle().worldDataServer.setCustomBossEvents(((NBTTagCompound) compound));
+    }
+
+    // Kenzie end
     // Spigot end
 }
