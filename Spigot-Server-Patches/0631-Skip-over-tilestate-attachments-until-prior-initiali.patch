From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moderocky <admin@moderocky.com>
Date: Sat, 10 Oct 2020 19:23:14 +0100
Subject: [PATCH] Skip over tilestate attachments until prior initialisation.


diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index 49e91b0f4818f90c4ed731d4d13f22f0d75fac33..b7a3d9394c0ee24033944e25b9cbe375340b604e 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -16,6 +16,7 @@ import org.bukkit.attachment.Attachable;
 import org.bukkit.attachment.Attachment;
 import org.bukkit.block.TileState;
 import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.block.CraftBlockEntityState;
 import org.bukkit.craftbukkit.persistence.CraftPersistentDataContainer;
 import org.bukkit.craftbukkit.persistence.CraftPersistentDataTypeRegistry;
 import org.bukkit.inventory.InventoryHolder;
@@ -43,6 +44,8 @@ public abstract class TileEntity implements KeyedObject, mx.kenzie.wellspring.ti
     public final AttachmentHolder attachments; // Kenzie
 
     // Kenzie start - attachments and NBT
+    public TileState state;
+
     @Override
     @SuppressWarnings("unchecked")
     public <T extends Attachment<?>> T getAttachment(Class<T> attachmentClass) {
@@ -71,7 +74,13 @@ public abstract class TileEntity implements KeyedObject, mx.kenzie.wellspring.ti
     @Override
     public TileState getState() {
         final Location location = getLocation();
-        return location == null ? null : ((TileState) getLocation().getBlock().getState());
+        if (state == null) {
+            state = (TileState) location.getBlock().getState(false);
+            final TileState state = this.getState();
+            if (state != null)
+                world.getServer().attachmentFactory.addAttachments(state, attachments); // Kenzie - reconstitute tile states
+        }
+        return state;
     }
 
     @Override
@@ -140,9 +149,6 @@ public abstract class TileEntity implements KeyedObject, mx.kenzie.wellspring.ti
         attachments.removeByClass(TileState.class); // Kenzie - reconstitute tile states
         this.world = world;
         this.position = blockposition.immutableCopy();
-        final TileState state = this.getState();
-        if (state != null)
-            world.getServer().attachmentFactory.addAttachments(state, attachments); // Kenzie - reconstitute tile states
     }
 
     public boolean hasWorld() {
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlockEntityState.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlockEntityState.java
index 12bb42b8d7557818a6c1bfae9a83a82eb9aebff4..fd204ba38f87a9b41b1fb6f7f4726bbf9c190e72 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlockEntityState.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlockEntityState.java
@@ -75,6 +75,11 @@ public class CraftBlockEntityState<T extends TileEntity> extends CraftBlockState
             throw new RuntimeException("Failed to read BlockState at: world: " + block.getWorld().getName() + " location: (" + block.getX() + ", " + block.getY() + ", " + block.getZ() + ")", thr);
         }
         // Paper end
+        try { // Kenzie start
+            BlockPosition position = new BlockPosition(getX(), getY(), getZ());
+            if (!DISABLE_SNAPSHOT)
+                world.getHandle().getTileEntity(position).getState(); // initialise attachments?
+        } catch (Throwable ignore) {} // Kenzie end
     }
 
     public final boolean snapshotDisabled; // Paper
