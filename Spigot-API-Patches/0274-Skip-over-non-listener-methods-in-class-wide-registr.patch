From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moderocky <admin@moderocky.com>
Date: Wed, 7 Oct 2020 15:34:40 +0100
Subject: [PATCH] Skip over non-listener methods in class-wide registration.


diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
index db6d79c30b43a0262cfda433f4f5b4d94e5f62bb..4faaab6bb2f17475e82acf5b01c8cff1cc603087 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
@@ -291,8 +291,10 @@ public final class JavaPluginLoader implements PluginLoader {
             return ret;
         }
 
+        final @Nullable EventHandler classHandler = listener.getClass().getAnnotation(EventHandler.class); // Kenzie - avoid repetition
+        @Nullable EventHandler mh; // Kenzie - Cut down on annotation grabbing
         for (final Method method : methods) {
-            final EventHandler eh = method.getAnnotation(EventHandler.class) != null ? method.getAnnotation(EventHandler.class) : listener.getClass().getAnnotation(EventHandler.class); // Kenzie - class-wide handlers
+            final EventHandler eh = (mh = method.getAnnotation(EventHandler.class)) != null ? mh : classHandler; // Kenzie - class-wide handlers
             if (eh == null) continue;
             // Do not register bridge or synthetic methods to avoid event duplication
             // Fixes SPIGOT-893
@@ -301,6 +303,7 @@ public final class JavaPluginLoader implements PluginLoader {
             }
             final Class<?> checkClass;
             if (method.getParameterTypes().length != 1 || !Event.class.isAssignableFrom(checkClass = method.getParameterTypes()[0])) {
+                if (classHandler == null) // Kenzie - skip over any non-listeners from class-wide annotations
                 plugin.getLogger().severe(plugin.getDescription().getFullName() + " attempted to register an invalid EventHandler method signature \"" + method.toGenericString() + "\" in " + listener.getClass());
                 continue;
             }
