From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Moderocky <admin@moderocky.com>
Date: Wed, 21 Oct 2020 11:20:03 +0100
Subject: [PATCH] Allow access to entity metadata packet.

Expose meta-fields and the outgoing metadata packet.

diff --git a/src/main/java/mx/kenzie/server/packet/PacketFactoryImpl.java b/src/main/java/mx/kenzie/server/packet/PacketFactoryImpl.java
index a2cf263fe500268d1e3aff4b95bdf0aa69121484..eaaae5aa2f344551afff0b7a1a715fed2f2b8dbe 100644
--- a/src/main/java/mx/kenzie/server/packet/PacketFactoryImpl.java
+++ b/src/main/java/mx/kenzie/server/packet/PacketFactoryImpl.java
@@ -6,6 +6,7 @@ import mx.kenzie.wellspring.conversion.Converter;
 import mx.kenzie.wellspring.nbt.NBTCompound;
 import mx.kenzie.wellspring.packet.PacketFactory;
 import mx.kenzie.wellspring.packet.PacketType;
+import mx.kenzie.wellspring.packet.specific.OutgoingEntityMetadata;
 import mx.kenzie.wellspring.tile.TileEntity;
 import mx.kenzie.wellspring.tile.TileType;
 import net.md_5.bungee.api.chat.BaseComponent;
@@ -358,6 +359,16 @@ public class PacketFactoryImpl extends PacketFactory {
         return new PacketPlayOutEntityMetadata();
     }
 
+    @Override
+    public OutgoingEntityMetadata playOutEntityMetadata(int entityId) {
+        return new PacketPlayOutEntityMetadata(entityId, new ArrayList<>());
+    }
+
+    @Override
+    public OutgoingEntityMetadata playOutEntityMetadata(Entity entity) {
+        return new PacketPlayOutEntityMetadata(entity.getEntityId(), ((CraftEntity) entity).getHandle().getDataWatcher(), false);
+    }
+
     @Override
     public mx.kenzie.wellspring.packet.Packet playOutEntityDestroy(Entity entity) {
         return playOutEntityDestroy(entity.getEntityId());
diff --git a/src/main/java/net/minecraft/server/DataWatcherObject.java b/src/main/java/net/minecraft/server/DataWatcherObject.java
index 620517b47877ff8ee6afc89366c637dfa5dd03d6..0139d2852df3d35f99166a4e65da7929106e4661 100644
--- a/src/main/java/net/minecraft/server/DataWatcherObject.java
+++ b/src/main/java/net/minecraft/server/DataWatcherObject.java
@@ -1,6 +1,8 @@
 package net.minecraft.server;
 
-public class DataWatcherObject<T> {
+import mx.kenzie.wellspring.packet.meta.MetaField;
+
+public class DataWatcherObject<T> extends MetaField<T> {
 
     private final int a;
     private final DataWatcherSerializer<T> b;
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 4429aa5dcee83bf5de13700d4b0fc2e22f452c9e..420f5f6c6155d0b68819431260cd08dd016dd5de 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -20,6 +20,7 @@ import java.util.stream.Stream;
 import javax.annotation.Nullable;
 
 import mx.kenzie.wellspring.event.EntityLandEvent;
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -159,6 +160,15 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     private static final DataWatcherObject<Boolean> as = DataWatcher.a(Entity.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Boolean> at = DataWatcher.a(Entity.class, DataWatcherRegistry.i);
     protected static final DataWatcherObject<EntityPose> POSE = DataWatcher.a(Entity.class, DataWatcherRegistry.s);
+    static { // Kenzie - init datawatchers
+        MetaField.SHARED_FLAGS = S;
+        MetaField.AIR_TICKS = AIR_TICKS;
+        MetaField.CUSTOM_NAME = aq;
+        MetaField.CUSTOM_NAME_VISIBLE = ar;
+        MetaField.SILENT = as;
+        MetaField.NO_GRAVITY = at;
+        MetaField.POSE = POSE;
+    }
     public boolean inChunk;
     public int chunkX;
     public int chunkY;
diff --git a/src/main/java/net/minecraft/server/EntityAgeable.java b/src/main/java/net/minecraft/server/EntityAgeable.java
index de48dc7cd1996f1a62ef1d0047b1182d7889bd38..78cd7a44bd264c6c0d1c93831ca01fba91993536 100644
--- a/src/main/java/net/minecraft/server/EntityAgeable.java
+++ b/src/main/java/net/minecraft/server/EntityAgeable.java
@@ -1,10 +1,15 @@
 package net.minecraft.server;
 
+import mx.kenzie.wellspring.packet.meta.MetaField;
+
 import javax.annotation.Nullable;
 
 public abstract class EntityAgeable extends EntityCreature {
 
     private static final DataWatcherObject<Boolean> bo = DataWatcher.a(EntityAgeable.class, DataWatcherRegistry.i);
+    static { // Kenzie - init datawatchers
+        MetaField.AGEABLE_FLAGS = bo;
+    }
     protected int b;
     protected int c;
     protected int d;
diff --git a/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java b/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java
index 5b0ee830b45a677bf354b02cf4fd311d842e7678..52ddad735ba6ddd123813ca7ac30e3b14d77219e 100644
--- a/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java
+++ b/src/main/java/net/minecraft/server/EntityAreaEffectCloud.java
@@ -11,6 +11,8 @@ import java.util.Map;
 import java.util.Map.Entry;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 // CraftBukkit start
@@ -25,6 +27,12 @@ public class EntityAreaEffectCloud extends Entity {
     private static final DataWatcherObject<Integer> COLOR = DataWatcher.a(EntityAreaEffectCloud.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Boolean> e = DataWatcher.a(EntityAreaEffectCloud.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<ParticleParam> f = DataWatcher.a(EntityAreaEffectCloud.class, DataWatcherRegistry.j);
+    static { // Kenzie - init datawatchers
+        MetaField.CLOUD_RADIUS = c;
+        MetaField.CLOUD_COLOR = COLOR;
+        MetaField.CLOUD_WAITING = e;
+        MetaField.CLOUD_PARTICLE = f;
+    }
     private PotionRegistry potionRegistry;
     public List<MobEffect> effects;
     private final Map<Entity, Integer> affectedEntities;
diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java
index 66597c6e1add4df2f093480f507f03788a3eb30b..ff96e6d0853ad5fb88d97c855601702a79c02ef5 100644
--- a/src/main/java/net/minecraft/server/EntityArmorStand.java
+++ b/src/main/java/net/minecraft/server/EntityArmorStand.java
@@ -6,6 +6,7 @@ import java.util.function.Predicate;
 import javax.annotation.Nullable;
 
 // CraftBukkit start
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.bukkit.inventory.EquipmentSlot;
 import org.bukkit.craftbukkit.CraftEquipmentSlot;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
@@ -31,6 +32,15 @@ public class EntityArmorStand extends EntityLiving {
     public static final DataWatcherObject<Vector3f> f = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.k);
     public static final DataWatcherObject<Vector3f> g = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.k);
     public static final DataWatcherObject<Vector3f> bh = DataWatcher.a(EntityArmorStand.class, DataWatcherRegistry.k);
+    static { // Kenzie - init datawatchers
+        MetaField.ARMOR_STAND_FLAGS = b;
+        MetaField.ARMOR_STAND_HEAD_POSE = c;
+        MetaField.ARMOR_STAND_BODY_POSE = d;
+        MetaField.ARMOR_STAND_LEFT_ARM_POSE = e;
+        MetaField.ARMOR_STAND_RIGHT_ARM_POSE = f;
+        MetaField.ARMOR_STAND_LEFT_LEG_POSE = g;
+        MetaField.ARMOR_STAND_RIGHT_LEG_POSE = bh;
+    }
     private static final Predicate<Entity> br = (entity) -> {
         return entity instanceof EntityMinecartAbstract && ((EntityMinecartAbstract) entity).getMinecartType() == EntityMinecartAbstract.EnumMinecartType.RIDEABLE;
     };
diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 1e7f5957d879d1ba8cf2b29cf9397b8e204e4381..15e1f3440bf08233006cf27243df877b68da63e7 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -9,6 +9,7 @@ import java.util.List;
 import javax.annotation.Nullable;
 
 // CraftBukkit start
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.player.PlayerPickupArrowEvent;
 // CraftBukkit end
@@ -17,6 +18,10 @@ public abstract class EntityArrow extends IProjectile {
 
     private static final DataWatcherObject<Byte> f = DataWatcher.a(EntityArrow.class, DataWatcherRegistry.a);
     private static final DataWatcherObject<Byte> g = DataWatcher.a(EntityArrow.class, DataWatcherRegistry.a);
+    static { // Kenzie - init datawatchers
+        MetaField.ARROW_FLAGS = f;
+        MetaField.ARROW_PIERCE_LEVEL = g;
+    }
     @Nullable
     private IBlockData ag;
     public boolean inGround;
diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java
index 38ce3563106b02bfefb54a637713f27262ff258f..bc6ea60e4427e79f56a819a0a7e56bad9304cdbb 100644
--- a/src/main/java/net/minecraft/server/EntityBat.java
+++ b/src/main/java/net/minecraft/server/EntityBat.java
@@ -4,11 +4,16 @@ import java.time.LocalDate;
 import java.time.temporal.ChronoField;
 import java.util.Random;
 import javax.annotation.Nullable;
+
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
 
 public class EntityBat extends EntityAmbient {
 
     private static final DataWatcherObject<Byte> b = DataWatcher.a(EntityBat.class, DataWatcherRegistry.a);
+    static { // Kenzie - init datawatchers
+        MetaField.BAT_FLAGS = b;
+    }
     private static final PathfinderTargetCondition c = (new PathfinderTargetCondition()).a(4.0D).b();
     private BlockPosition d;
 
diff --git a/src/main/java/net/minecraft/server/EntityBee.java b/src/main/java/net/minecraft/server/EntityBee.java
index f73641ddb3e82bc653732105ef0a3d41a28e845f..6530649ea29481e876e04c29f20b1e2eb3ce3ad6 100644
--- a/src/main/java/net/minecraft/server/EntityBee.java
+++ b/src/main/java/net/minecraft/server/EntityBee.java
@@ -1,6 +1,8 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import mx.kenzie.wellspring.packet.meta.MetaField;
+
 import java.util.Comparator;
 import java.util.EnumSet;
 import java.util.Iterator;
@@ -16,6 +18,10 @@ public class EntityBee extends EntityAnimal implements IEntityAngerable, EntityB
 
     private static final DataWatcherObject<Byte> bo = DataWatcher.a(EntityBee.class, DataWatcherRegistry.a);
     private static final DataWatcherObject<Integer> bp = DataWatcher.a(EntityBee.class, DataWatcherRegistry.b);
+    static { // Kenzie - init datawatchers
+        MetaField.BEE_FLAGS = bo;
+        MetaField.BEE_ANGER_TIME = bp;
+    }
     private static final IntRange bq = TimeRange.a(20, 39);
     private UUID br;
     private float bs;
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 45fea38933d57e52dea19317c65682d57114a077..b599813b059ec670fdcd70236ab851d5f193e5b1 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -5,6 +5,7 @@ import java.util.List;
 import javax.annotation.Nullable;
 
 // CraftBukkit start
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.bukkit.Location;
 import org.bukkit.entity.Vehicle;
 import org.bukkit.event.vehicle.VehicleDamageEvent;
@@ -22,6 +23,15 @@ public class EntityBoat extends Entity {
     private static final DataWatcherObject<Boolean> f = DataWatcher.a(EntityBoat.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Boolean> g = DataWatcher.a(EntityBoat.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Integer> ag = DataWatcher.a(EntityBoat.class, DataWatcherRegistry.b);
+    static { // Kenzie - init datawatchers
+        MetaField.BOAT_HURT = b;
+        MetaField.BOAT_HURT_DIRECTION = c;
+        MetaField.BOAT_DAMAGE = d;
+        MetaField.BOAT_TYPE = e;
+        MetaField.BOAT_PADDLE_LEFT = f;
+        MetaField.BOAT_PADDLE_RIGHT = g;
+        MetaField.BOAT_BUBBLE_TIME = ag;
+    }
     private final float[] ah;
     private float ai;
     private float aj;
diff --git a/src/main/java/net/minecraft/server/EntityCat.java b/src/main/java/net/minecraft/server/EntityCat.java
index 957a351c3f6c4f66d7af6657ab0c3cbeed94662f..9be02b1513c33792a75ce5b64913743ad6a1d83d 100644
--- a/src/main/java/net/minecraft/server/EntityCat.java
+++ b/src/main/java/net/minecraft/server/EntityCat.java
@@ -1,6 +1,8 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Maps;
+import mx.kenzie.wellspring.packet.meta.MetaField;
+
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -15,6 +17,12 @@ public class EntityCat extends EntityTameableAnimal {
     private static final DataWatcherObject<Boolean> bt = DataWatcher.a(EntityCat.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Boolean> bu = DataWatcher.a(EntityCat.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Integer> bv = DataWatcher.a(EntityCat.class, DataWatcherRegistry.b);
+    static { // Kenzie - init datawatchers
+        MetaField.CAT_TYPE = bs;
+        MetaField.CAT_LYING = bt;
+        MetaField.CAT_RELAX_STATE = bu;
+        MetaField.CAT_COLLAR = bv;
+    }
     public static final Map<Integer, MinecraftKey> bq = (Map) SystemUtils.a(Maps.newHashMap(), (hashmap) -> { // CraftBukkit - decompile error
         hashmap.put(0, new MinecraftKey("textures/entity/cat/tabby.png"));
         hashmap.put(1, new MinecraftKey("textures/entity/cat/black.png"));
diff --git a/src/main/java/net/minecraft/server/EntityCreeper.java b/src/main/java/net/minecraft/server/EntityCreeper.java
index 79ef955070b2982be79cc58e40093624bd088ff0..ee117f66ef57a67fad9d5bf6e834a253eda682c5 100644
--- a/src/main/java/net/minecraft/server/EntityCreeper.java
+++ b/src/main/java/net/minecraft/server/EntityCreeper.java
@@ -3,6 +3,7 @@ package net.minecraft.server;
 import java.util.Collection;
 import java.util.Iterator;
 // CraftBukkit start
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.entity.ExplosionPrimeEvent;
@@ -13,6 +14,11 @@ public class EntityCreeper extends EntityMonster {
     private static final DataWatcherObject<Integer> b = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Boolean> POWERED = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Boolean> d = DataWatcher.a(EntityCreeper.class, DataWatcherRegistry.i); private static final DataWatcherObject<Boolean> isIgnitedDW = d; // Paper OBFHELPER
+    static { // Kenzie - init datawatchers
+        MetaField.CREEPER_SWELL_TICKS = b;
+        MetaField.CREEPER_POWERED = POWERED;
+        MetaField.CREEPER_IGNITED = d;
+    }
     private int bo;
     public int fuseTicks; // Paper - public
     public int maxFuseTicks = 30;
diff --git a/src/main/java/net/minecraft/server/EntityDolphin.java b/src/main/java/net/minecraft/server/EntityDolphin.java
index 2916ee89ef7a14619703dfbe7efd5c78a2f34337..0f4dbcfad7017d724958618d88ee8e0d4c461bc5 100644
--- a/src/main/java/net/minecraft/server/EntityDolphin.java
+++ b/src/main/java/net/minecraft/server/EntityDolphin.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import mx.kenzie.wellspring.packet.meta.MetaField;
+
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Objects;
@@ -13,6 +15,11 @@ public class EntityDolphin extends EntityWaterAnimal {
     private static final DataWatcherObject<BlockPosition> c = DataWatcher.a(EntityDolphin.class, DataWatcherRegistry.l);
     private static final DataWatcherObject<Boolean> d = DataWatcher.a(EntityDolphin.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Integer> bo = DataWatcher.a(EntityDolphin.class, DataWatcherRegistry.b);
+    static { // Kenzie - init datawatchers
+        MetaField.DOLPHIN_TREASURE_POSITION = c;
+        MetaField.DOLPHIN_HAS_FISH = d;
+        MetaField.DOLPHIN_MOIST_LEVEL = bo;
+    }
     private static final PathfinderTargetCondition bp = (new PathfinderTargetCondition()).a(10.0D).b().a().c();
     public static final Predicate<EntityItem> b = (entityitem) -> {
         return !entityitem.p() && entityitem.isAlive() && entityitem.isInWater();
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 7ddf276732a58c998c733aaaeee3e1bfc614ea0a..849ed362b2eb9d6f1f79f703ec67d96008ab01f7 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -11,6 +11,7 @@ import java.util.UUID;
 import javax.annotation.Nullable;
 
 // CraftBukkit start
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.entity.CraftLivingEntity;
 import org.bukkit.event.entity.CreatureSpawnEvent;
@@ -25,6 +26,9 @@ import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
 public abstract class EntityInsentient extends EntityLiving {
 
     private static final DataWatcherObject<Byte> b = DataWatcher.a(EntityInsentient.class, DataWatcherRegistry.a);
+    static { // Kenzie - init datawatchers
+        MetaField.MOB_FLAGS = b;
+    }
     public int e;
     protected int f;
     protected ControllerLook lookController;
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index fe0334b505de64ae1d96c4f0b6e66313d2b40010..fd898252a4e24775ac97a0dc56ec06cd3954f339 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -20,6 +20,8 @@ import java.util.Random;
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import mx.kenzie.wellspring.packet.meta.MetaField;
 import org.apache.logging.log4j.Logger;
 
 // CraftBukkit start
@@ -57,6 +59,15 @@ public abstract class EntityLiving extends Entity {
     public static final DataWatcherObject<Integer> ARROWS_IN_BODY = DataWatcher.a(EntityLiving.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Integer> bi = DataWatcher.a(EntityLiving.class, DataWatcherRegistry.b);
     private static final DataWatcherObject<Optional<BlockPosition>> bj = DataWatcher.a(EntityLiving.class, DataWatcherRegistry.m);
+    static { // Kenzie - init datawatchers
+       MetaField.LIVING_ENTITY_FLAGS = ag;
+       MetaField.HEALTH = HEALTH;
+       MetaField.EFFECT_COLOR = f;
+       MetaField.EFFECT_AMBIENCE = g;
+       MetaField.ARROWS_IN_BODY = ARROWS_IN_BODY;
+       MetaField.STINGER_COUNT = bi;
+       MetaField.SLEEPING_POSITION = bj;
+    }
     protected static final EntitySize ah = EntitySize.c(0.2F, 0.2F);
     private final AttributeMapBase attributeMap;
     public CombatTracker combatTracker = new CombatTracker(this);
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
index 39f5e73895cf70f1ff1231bdeba986816e579d68..dfdd5f8fde090c25e86fed3c01cd3d162de13423 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
@@ -1,13 +1,70 @@
 package net.minecraft.server;
 
+import mx.kenzie.wellspring.packet.meta.MetaField;
+import mx.kenzie.wellspring.packet.specific.OutgoingEntityMetadata;
+
 import java.io.IOException;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
-public class PacketPlayOutEntityMetadata implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutEntityMetadata implements Packet<PacketListenerPlayOut>, OutgoingEntityMetadata { // Kenzie
 
     private int a;
     private List<DataWatcher.Item<?>> b;
 
+    // Kenzie start
+    public PacketPlayOutEntityMetadata(int i, List<DataWatcher.Item<?>> list) { // Kenzie
+        a = i;
+        b = list;
+    }
+
+    public List<DataWatcher.Item<?>> getWatcherEntries() { // Kenzie
+        return b;
+    }
+
+    @Override
+    public int getFieldCount() {
+        return b.size();
+    }
+
+    @Override
+    public Map<MetaField<?>, ?> getDataFields() {
+        HashMap<MetaField<?>, Object> metaFieldHashMap = new HashMap<>();
+        for (DataWatcher.Item<?> item : b) {
+            metaFieldHashMap.put(item.a(), item.b());
+        }
+        return metaFieldHashMap;
+    }
+
+    @Override
+    public <T> boolean hasDataField(MetaField<T> field) {
+        for (DataWatcher.Item<?> item : b) {
+            if (item.a() == field) return true;
+        }
+        return false;
+    }
+
+    @Override
+    public <T> T getDataField(MetaField<T> field) {
+        for (DataWatcher.Item<?> item : b) {
+            if (item.a() == field) return (T) item.b();
+        }
+        return null;
+    }
+
+    @Override
+    public <T> void addDataField(MetaField<T> field, T value) {
+        b.add(new DataWatcher.Item<>((DataWatcherObject<? super T>) field, value));
+    }
+
+    @Override
+    public <T> void removeDataField(MetaField<T> field) {
+        b.removeIf(item -> item.a() == field);
+    }
+
+    // Kenzie end
+
     public PacketPlayOutEntityMetadata() {}
 
     public PacketPlayOutEntityMetadata(int i, DataWatcher datawatcher, boolean flag) {
